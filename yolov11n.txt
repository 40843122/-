Create Deep Learning Network Architecture with Pretrained Parameters
Script for creating the layers for a deep learning network with the following properties:
Number of layers: 296
Number of connections: 425
Pretrained parameters file: C:\Users\user\Desktop\yolo v11 gpu coco\runs\detect\train6\weights\params_2025_03_11__22_23_57.mat
Run the script to create the layers in the workspace variable net.
To learn more, see Generate MATLAB Code From Deep Network Designer.
Auto-generated by MATLAB on 11-Mar-2025 22:24:03
Load Network Parameters
Load network parameters like weights, biases, or layers unsupported for network code generation from the stored parameters file.
params = load("C:\Users\user\Desktop\不重要\yolo v11 gpu coco 2\params_2025_03_11__22_23_57.mat");

Create dlnetwork
Create the dlnetwork variable to contain the network layers.
net = dlnetwork;

Add Layer Branches
Add branches to the dlnetwork. Each branch is a linear array of layers.
tempNet = [
    imageInputLayer([640 640 3],"Name","images","Normalization","none")
    convolution2dLayer([3 3],16,"Name","x_model_0_conv_Conv","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_0_conv_Conv.Bias,"Weights",params.x_model_0_conv_Conv.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_0_act_Sigm_1");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_0_act_Mul")
    convolution2dLayer([3 3],32,"Name","x_model_1_conv_Conv","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_1_conv_Conv.Bias,"Weights",params.x_model_1_conv_Conv.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_1_act_Sigm_1");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_1_act_Mul")
    convolution2dLayer([1 1],32,"Name","x_model_2_cv1_conv_1","Bias",params.x_model_2_cv1_conv_1.Bias,"Weights",params.x_model_2_cv1_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_2_cv1_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_2_cv1_act__1")
    helperBestSplitLayer1004("SplitLayer1004","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1004.onnx__Split_185,"in",["x_model_2_Split_ou_1" "x_model_2_Split_outp"])];
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],8,"Name","x_model_2_m_0_cv1__4","Padding",[1 1 1 1],"Bias",params.x_model_2_m_0_cv1__4.Bias,"Weights",params.x_model_2_m_0_cv1__4.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_2_m_0_cv1__3");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_2_m_0_cv1__2")
    convolution2dLayer([3 3],16,"Name","x_model_2_m_0_cv2__4","Padding",[1 1 1 1],"Bias",params.x_model_2_m_0_cv2__4.Bias,"Weights",params.x_model_2_m_0_cv2__4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_2_m_0_cv2__3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_2_m_0_cv2__2");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_2_m_0_Add");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_2_Concat")
    convolution2dLayer([1 1],64,"Name","x_model_2_cv2_conv_1","Bias",params.x_model_2_cv2_conv_1.Bias,"Weights",params.x_model_2_cv2_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_2_cv2_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_2_cv2_act__1")
    convolution2dLayer([3 3],64,"Name","x_model_3_conv_Conv","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_3_conv_Conv.Bias,"Weights",params.x_model_3_conv_Conv.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_3_act_Sigm_1");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_3_act_Mul")
    convolution2dLayer([1 1],64,"Name","x_model_4_cv1_conv_1","Bias",params.x_model_4_cv1_conv_1.Bias,"Weights",params.x_model_4_cv1_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_4_cv1_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_4_cv1_act__1")
    helperBestSplitLayer1009("SplitLayer1009","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1009.onnx__Split_205,"in",["x_model_4_Split_ou_1" "x_model_4_Split_outp"])];
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],16,"Name","x_model_4_m_0_cv1__4","Padding",[1 1 1 1],"Bias",params.x_model_4_m_0_cv1__4.Bias,"Weights",params.x_model_4_m_0_cv1__4.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_4_m_0_cv1__3");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_4_m_0_cv1__2")
    convolution2dLayer([3 3],32,"Name","x_model_4_m_0_cv2__4","Padding",[1 1 1 1],"Bias",params.x_model_4_m_0_cv2__4.Bias,"Weights",params.x_model_4_m_0_cv2__4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_4_m_0_cv2__3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_4_m_0_cv2__2");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_4_m_0_Add");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_4_Concat")
    convolution2dLayer([1 1],128,"Name","x_model_4_cv2_conv_1","Bias",params.x_model_4_cv2_conv_1.Bias,"Weights",params.x_model_4_cv2_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_4_cv2_act__2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_4_cv2_act__1");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],128,"Name","x_model_5_conv_Conv","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_5_conv_Conv.Bias,"Weights",params.x_model_5_conv_Conv.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_5_act_Sigm_1");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_5_act_Mul")
    convolution2dLayer([1 1],128,"Name","x_model_6_cv1_conv_1","Bias",params.x_model_6_cv1_conv_1.Bias,"Weights",params.x_model_6_cv1_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_cv1_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_6_cv1_act__1")
    helperBestSplitLayer1014("SplitLayer1014","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1014.onnx__Split_225,"in",["x_model_6_Split_ou_1" "x_model_6_Split_outp"])];
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],32,"Name","x_model_6_m_0_cv1__4","Bias",params.x_model_6_m_0_cv1__4.Bias,"Weights",params.x_model_6_m_0_cv1__4.Weights);
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],32,"Name","x_model_6_m_0_cv2__4","Bias",params.x_model_6_m_0_cv2__4.Bias,"Weights",params.x_model_6_m_0_cv2__4.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_cv1__3");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_cv2__3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_6_m_0_cv1__2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_6_m_0_cv2__2");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],32,"Name","x_model_6_m_0_m_m_10","Padding",[1 1 1 1],"Bias",params.x_model_6_m_0_m_m_10.Bias,"Weights",params.x_model_6_m_0_m_m_10.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_m_m_9");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_6_m_0_m_m_8")
    convolution2dLayer([3 3],32,"Name","x_model_6_m_0_m_m_13","Padding",[1 1 1 1],"Bias",params.x_model_6_m_0_m_m_13.Bias,"Weights",params.x_model_6_m_0_m_m_13.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_m_m_12");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_6_m_0_m_m_11");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_6_m_0_m_m_7");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],32,"Name","x_model_6_m_0_m_m_23","Padding",[1 1 1 1],"Bias",params.x_model_6_m_0_m_m_23.Bias,"Weights",params.x_model_6_m_0_m_m_23.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_m_m_22");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_6_m_0_m_m_21")
    convolution2dLayer([3 3],32,"Name","x_model_6_m_0_m_m_26","Padding",[1 1 1 1],"Bias",params.x_model_6_m_0_m_m_26.Bias,"Weights",params.x_model_6_m_0_m_m_26.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_m_m_25");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_6_m_0_m_m_24");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_6_m_0_m_m_20");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_6_m_0_Conc_1")
    convolution2dLayer([1 1],64,"Name","x_model_6_m_0_cv3__4","Bias",params.x_model_6_m_0_cv3__4.Bias,"Weights",params.x_model_6_m_0_cv3__4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_m_0_cv3__3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_6_m_0_cv3__2");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_6_Concat")
    convolution2dLayer([1 1],128,"Name","x_model_6_cv2_conv_1","Bias",params.x_model_6_cv2_conv_1.Bias,"Weights",params.x_model_6_cv2_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_6_cv2_act__2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_6_cv2_act__1");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],256,"Name","x_model_7_conv_Conv","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_7_conv_Conv.Bias,"Weights",params.x_model_7_conv_Conv.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_7_act_Sigm_1");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_7_act_Mul")
    convolution2dLayer([1 1],256,"Name","x_model_8_cv1_conv_1","Bias",params.x_model_8_cv1_conv_1.Bias,"Weights",params.x_model_8_cv1_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_cv1_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_8_cv1_act__1")
    helperBestSplitLayer1019("SplitLayer1019","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1019.onnx__Split_262,"in",["x_model_8_Split_ou_1" "x_model_8_Split_outp"])];
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],64,"Name","x_model_8_m_0_cv1__4","Bias",params.x_model_8_m_0_cv1__4.Bias,"Weights",params.x_model_8_m_0_cv1__4.Weights);
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],64,"Name","x_model_8_m_0_cv2__4","Bias",params.x_model_8_m_0_cv2__4.Bias,"Weights",params.x_model_8_m_0_cv2__4.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_cv1__3");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_cv2__3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_8_m_0_cv1__2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_8_m_0_cv2__2");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_8_m_0_m_m_10","Padding",[1 1 1 1],"Bias",params.x_model_8_m_0_m_m_10.Bias,"Weights",params.x_model_8_m_0_m_m_10.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_m_m_9");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_8_m_0_m_m_8")
    convolution2dLayer([3 3],64,"Name","x_model_8_m_0_m_m_13","Padding",[1 1 1 1],"Bias",params.x_model_8_m_0_m_m_13.Bias,"Weights",params.x_model_8_m_0_m_m_13.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_m_m_12");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_8_m_0_m_m_11");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_8_m_0_m_m_7");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_8_m_0_m_m_23","Padding",[1 1 1 1],"Bias",params.x_model_8_m_0_m_m_23.Bias,"Weights",params.x_model_8_m_0_m_m_23.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_m_m_22");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_8_m_0_m_m_21")
    convolution2dLayer([3 3],64,"Name","x_model_8_m_0_m_m_26","Padding",[1 1 1 1],"Bias",params.x_model_8_m_0_m_m_26.Bias,"Weights",params.x_model_8_m_0_m_m_26.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_m_m_25");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_8_m_0_m_m_24");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_8_m_0_m_m_20");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_8_m_0_Conc_1")
    convolution2dLayer([1 1],128,"Name","x_model_8_m_0_cv3__4","Bias",params.x_model_8_m_0_cv3__4.Bias,"Weights",params.x_model_8_m_0_cv3__4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_m_0_cv3__3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_8_m_0_cv3__2");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_8_Concat")
    convolution2dLayer([1 1],256,"Name","x_model_8_cv2_conv_1","Bias",params.x_model_8_cv2_conv_1.Bias,"Weights",params.x_model_8_cv2_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_8_cv2_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_8_cv2_act__1")
    convolution2dLayer([1 1],128,"Name","x_model_9_cv1_conv_1","Bias",params.x_model_9_cv1_conv_1.Bias,"Weights",params.x_model_9_cv1_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_9_cv1_act__2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_9_cv1_act__1");
net = addLayers(net,tempNet);

tempNet = maxPooling2dLayer([5 5],"Name","x_model_9_m_MaxPool","Padding",[2 2 2 2]);
net = addLayers(net,tempNet);

tempNet = maxPooling2dLayer([5 5],"Name","x_model_9_m_1_MaxP_1","Padding",[2 2 2 2]);
net = addLayers(net,tempNet);

tempNet = maxPooling2dLayer([5 5],"Name","x_model_9_m_2_MaxP_1","Padding",[2 2 2 2]);
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,4,"Name","x_model_9_Concat")
    convolution2dLayer([1 1],256,"Name","x_model_9_cv2_conv_1","Bias",params.x_model_9_cv2_conv_1.Bias,"Weights",params.x_model_9_cv2_conv_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_9_cv2_act__2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_9_cv2_act__1")
    convolution2dLayer([1 1],256,"Name","x_model_10_cv1_con_1","Bias",params.x_model_10_cv1_con_1.Bias,"Weights",params.x_model_10_cv1_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_10_cv1_act_2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_10_cv1_act_1")
    helperBestSplitLayer1024("SplitLayer1024","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1024.onnx__Split_262,"in",["x_model_10_Split_o_1" "x_model_10_Split_out"])];
net = addLayers(net,tempNet);

tempNet = [
    convolution2dLayer([1 1],256,"Name","x_model_10_m_m_0__32","Bias",params.x_model_10_m_m_0__32.Bias,"Weights",params.x_model_10_m_m_0__32.Weights)
    helperBestReshapeToReshapeLayer1072("Reshape_To_ReshapeLayer1072","Unable to generate code for [1×1 ONNXParameters] object",params.Reshape_To_ReshapeLayer1072.onnx__Split_326,"in",["x_model_10_m_m_0__11" "x_model_10_m_m_0__12" "x_model_10_m_m_0__8" "x_model_10_m_m_0__13" "x_model_10_m_m_0__11NumDims" "x_model_10_m_m_0__12NumDims" "x_model_10_m_m_0__13NumDims"])];
net = addLayers(net,tempNet);

tempNet = groupedConvolution2dLayer([3 3],1,128,"Name","x_model_10_m_m_0__30","Padding",[1 1 1 1],"Bias",params.x_model_10_m_m_0__30.Bias,"Weights",params.x_model_10_m_m_0__30.Weights);
net = addLayers(net,tempNet);

tempNet = [
    helperBestTransposeToAddLayer1081("Transpose_To_AddLayer1081","Unable to generate code for [1×1 ONNXParameters] object",["in1" "in2" "in3" "in4" "in5" "in6" "in7"],"x_model_10_m_m_0_att")
    convolution2dLayer([1 1],128,"Name","x_model_10_m_m_0__31","Bias",params.x_model_10_m_m_0__31.Bias,"Weights",params.x_model_10_m_m_0__31.Weights)];
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_10_m_m_0_A_2");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],256,"Name","x_model_10_m_m_0_f_6","Bias",params.x_model_10_m_m_0_f_6.Bias,"Weights",params.x_model_10_m_m_0_f_6.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_10_m_m_0_f_5");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_10_m_m_0_f_4")
    convolution2dLayer([1 1],128,"Name","x_model_10_m_m_0_f_7","Bias",params.x_model_10_m_m_0_f_7.Bias,"Weights",params.x_model_10_m_m_0_f_7.Weights)];
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_10_m_m_0_A_3");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_10_Concat")
    convolution2dLayer([1 1],256,"Name","x_model_10_cv2_con_1","Bias",params.x_model_10_cv2_con_1.Bias,"Weights",params.x_model_10_cv2_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_10_cv2_act_2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_10_cv2_act_1");
net = addLayers(net,tempNet);

tempNet = resize2dLayer("Name","resize-output-size","GeometricTransformMode","half-pixel","Method","nearest","NearestRoundingMode","round","OutputSize",[40 40]);
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_12_Concat")
    convolution2dLayer([1 1],128,"Name","x_model_13_cv1_con_1","Bias",params.x_model_13_cv1_con_1.Bias,"Weights",params.x_model_13_cv1_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_13_cv1_act_2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_13_cv1_act_1")
    helperBestSplitLayer1033("SplitLayer1033","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1033.onnx__Split_225,"in",["x_model_13_Split_o_1" "x_model_13_Split_out"])];
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],32,"Name","x_model_13_m_0_cv1_4","Padding",[1 1 1 1],"Bias",params.x_model_13_m_0_cv1_4.Bias,"Weights",params.x_model_13_m_0_cv1_4.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_13_m_0_cv1_3");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_13_m_0_cv1_2")
    convolution2dLayer([3 3],64,"Name","x_model_13_m_0_cv2_4","Padding",[1 1 1 1],"Bias",params.x_model_13_m_0_cv2_4.Bias,"Weights",params.x_model_13_m_0_cv2_4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_13_m_0_cv2_3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_13_m_0_cv2_2");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_13_m_0_Add");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_13_Concat")
    convolution2dLayer([1 1],128,"Name","x_model_13_cv2_con_1","Bias",params.x_model_13_cv2_con_1.Bias,"Weights",params.x_model_13_cv2_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_13_cv2_act_2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_13_cv2_act_1");
net = addLayers(net,tempNet);

tempNet = resize2dLayer("Name","resize-output-size_1","GeometricTransformMode","half-pixel","Method","nearest","NearestRoundingMode","round","OutputSize",[80 80]);
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_15_Concat")
    convolution2dLayer([1 1],64,"Name","x_model_16_cv1_con_1","Bias",params.x_model_16_cv1_con_1.Bias,"Weights",params.x_model_16_cv1_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_16_cv1_act_2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_16_cv1_act_1")
    helperBestSplitLayer1042("SplitLayer1042","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1042.onnx__Split_205,"in",["x_model_16_Split_o_1" "x_model_16_Split_out"])];
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],16,"Name","x_model_16_m_0_cv1_4","Padding",[1 1 1 1],"Bias",params.x_model_16_m_0_cv1_4.Bias,"Weights",params.x_model_16_m_0_cv1_4.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_16_m_0_cv1_3");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_16_m_0_cv1_2")
    convolution2dLayer([3 3],32,"Name","x_model_16_m_0_cv2_4","Padding",[1 1 1 1],"Bias",params.x_model_16_m_0_cv2_4.Bias,"Weights",params.x_model_16_m_0_cv2_4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_16_m_0_cv2_3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_16_m_0_cv2_2");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_16_m_0_Add");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_16_Concat")
    convolution2dLayer([1 1],64,"Name","x_model_16_cv2_con_1","Bias",params.x_model_16_cv2_con_1.Bias,"Weights",params.x_model_16_cv2_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_16_cv2_act_2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_16_cv2_act_1");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_17_conv_Co_1","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_17_conv_Co_1.Bias,"Weights",params.x_model_17_conv_Co_1.Weights);
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_23_cv2_0__9","Padding",[1 1 1 1],"Bias",params.x_model_23_cv2_0__9.Bias,"Weights",params.x_model_23_cv2_0__9.Weights);
net = addLayers(net,tempNet);

tempNet = groupedConvolution2dLayer([3 3],1,64,"Name","x_model_23_cv3_0__15","Padding",[1 1 1 1],"Bias",params.x_model_23_cv3_0__15.Bias,"Weights",params.x_model_23_cv3_0__15.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_17_act_Sig_1");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv2_0__8");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_0__14");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_17_act_Mul");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv2_0__7")
    convolution2dLayer([3 3],64,"Name","x_model_23_cv2_0__12","Padding",[1 1 1 1],"Bias",params.x_model_23_cv2_0__12.Bias,"Weights",params.x_model_23_cv2_0__12.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_0__13")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_0__18","Bias",params.x_model_23_cv3_0__18.Bias,"Weights",params.x_model_23_cv3_0__18.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_18_Concat")
    convolution2dLayer([1 1],128,"Name","x_model_19_cv1_con_1","Bias",params.x_model_19_cv1_con_1.Bias,"Weights",params.x_model_19_cv1_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv2_0__11");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_0__17");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_19_cv1_act_2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv2_0__10")
    convolution2dLayer([1 1],64,"Name","x_model_23_cv2_0__13","Bias",params.x_model_23_cv2_0__13.Bias,"Weights",params.x_model_23_cv2_0__13.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_0__16")
    groupedConvolution2dLayer([3 3],1,80,"Name","x_model_23_cv3_0__21","Padding",[1 1 1 1],"Bias",params.x_model_23_cv3_0__21.Bias,"Weights",params.x_model_23_cv3_0__21.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_19_cv1_act_1")
    helperBestSplitLayer1047("SplitLayer1047","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1047.onnx__Split_225,"in",["x_model_19_Split_o_1" "x_model_19_Split_out"])];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_0__20");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],32,"Name","x_model_19_m_0_cv1_4","Padding",[1 1 1 1],"Bias",params.x_model_19_m_0_cv1_4.Bias,"Weights",params.x_model_19_m_0_cv1_4.Weights);
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_0__19")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_0__24","Bias",params.x_model_23_cv3_0__24.Bias,"Weights",params.x_model_23_cv3_0__24.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_19_m_0_cv1_3");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_19_m_0_cv1_2")
    convolution2dLayer([3 3],64,"Name","x_model_19_m_0_cv2_4","Padding",[1 1 1 1],"Bias",params.x_model_19_m_0_cv2_4.Bias,"Weights",params.x_model_19_m_0_cv2_4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_0__23");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_0__22")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_0__25","Bias",params.x_model_23_cv3_0__25.Bias,"Weights",params.x_model_23_cv3_0__25.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_19_m_0_cv2_3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_19_m_0_cv2_2");
net = addLayers(net,tempNet);

tempNet = concatenationLayer(3,2,"Name","x_model_23_Concat");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_19_m_0_Add");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_19_Concat")
    convolution2dLayer([1 1],128,"Name","x_model_19_cv2_con_1","Bias",params.x_model_19_cv2_con_1.Bias,"Weights",params.x_model_19_cv2_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_19_cv2_act_2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_19_cv2_act_1");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],128,"Name","x_model_20_conv_Co_1","Padding",[1 1 1 1],"Stride",[2 2],"Bias",params.x_model_20_conv_Co_1.Bias,"Weights",params.x_model_20_conv_Co_1.Weights);
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_23_cv2_1__9","Padding",[1 1 1 1],"Bias",params.x_model_23_cv2_1__9.Bias,"Weights",params.x_model_23_cv2_1__9.Weights);
net = addLayers(net,tempNet);

tempNet = groupedConvolution2dLayer([3 3],1,128,"Name","x_model_23_cv3_1__15","Padding",[1 1 1 1],"Bias",params.x_model_23_cv3_1__15.Bias,"Weights",params.x_model_23_cv3_1__15.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_20_act_Sig_1");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv2_1__8");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_1__14");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_20_act_Mul");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv2_1__7")
    convolution2dLayer([3 3],64,"Name","x_model_23_cv2_1__12","Padding",[1 1 1 1],"Bias",params.x_model_23_cv2_1__12.Bias,"Weights",params.x_model_23_cv2_1__12.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_1__13")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_1__18","Bias",params.x_model_23_cv3_1__18.Bias,"Weights",params.x_model_23_cv3_1__18.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_21_Concat")
    convolution2dLayer([1 1],256,"Name","x_model_22_cv1_con_1","Bias",params.x_model_22_cv1_con_1.Bias,"Weights",params.x_model_22_cv1_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv2_1__11");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_1__17");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_cv1_act_2");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv2_1__10")
    convolution2dLayer([1 1],64,"Name","x_model_23_cv2_1__13","Bias",params.x_model_23_cv2_1__13.Bias,"Weights",params.x_model_23_cv2_1__13.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_1__16")
    groupedConvolution2dLayer([3 3],1,80,"Name","x_model_23_cv3_1__21","Padding",[1 1 1 1],"Bias",params.x_model_23_cv3_1__21.Bias,"Weights",params.x_model_23_cv3_1__21.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_22_cv1_act_1")
    helperBestSplitLayer1052("SplitLayer1052","Unable to generate code for [1×1 ONNXParameters] object",params.SplitLayer1052.onnx__Split_262,"in",["x_model_22_Split_o_1" "x_model_22_Split_out"])];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_1__20");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],64,"Name","x_model_22_m_0_cv1_4","Bias",params.x_model_22_m_0_cv1_4.Bias,"Weights",params.x_model_22_m_0_cv1_4.Weights);
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([1 1],64,"Name","x_model_22_m_0_cv2_4","Bias",params.x_model_22_m_0_cv2_4.Bias,"Weights",params.x_model_22_m_0_cv2_4.Weights);
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_1__19")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_1__24","Bias",params.x_model_23_cv3_1__24.Bias,"Weights",params.x_model_23_cv3_1__24.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_cv1_3");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_cv2_3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_22_m_0_cv1_2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_22_m_0_cv2_2");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_1__23");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_22_m_0_m__10","Padding",[1 1 1 1],"Bias",params.x_model_22_m_0_m__10.Bias,"Weights",params.x_model_22_m_0_m__10.Weights);
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_1__22")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_1__25","Bias",params.x_model_23_cv3_1__25.Bias,"Weights",params.x_model_23_cv3_1__25.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_m__9");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_22_m_0_m__8")
    convolution2dLayer([3 3],64,"Name","x_model_22_m_0_m__13","Padding",[1 1 1 1],"Bias",params.x_model_22_m_0_m__13.Bias,"Weights",params.x_model_22_m_0_m__13.Weights)];
net = addLayers(net,tempNet);

tempNet = concatenationLayer(3,2,"Name","x_model_23_Concat_1");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_m__12");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_22_m_0_m__11");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_22_m_0_m__7");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_22_m_0_m__23","Padding",[1 1 1 1],"Bias",params.x_model_22_m_0_m__23.Bias,"Weights",params.x_model_22_m_0_m__23.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_m__22");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_22_m_0_m__21")
    convolution2dLayer([3 3],64,"Name","x_model_22_m_0_m__26","Padding",[1 1 1 1],"Bias",params.x_model_22_m_0_m__26.Bias,"Weights",params.x_model_22_m_0_m__26.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_m__25");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_22_m_0_m__24");
net = addLayers(net,tempNet);

tempNet = additionLayer(2,"Name","x_model_22_m_0_m__20");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,2,"Name","x_model_22_m_0_Con_1")
    convolution2dLayer([1 1],128,"Name","x_model_22_m_0_cv3_4","Bias",params.x_model_22_m_0_cv3_4.Bias,"Weights",params.x_model_22_m_0_cv3_4.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_m_0_cv3_3");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_22_m_0_cv3_2");
net = addLayers(net,tempNet);

tempNet = [
    concatenationLayer(3,3,"Name","x_model_22_Concat")
    convolution2dLayer([1 1],256,"Name","x_model_22_cv2_con_1","Bias",params.x_model_22_cv2_con_1.Bias,"Weights",params.x_model_22_cv2_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_22_cv2_act_2");
net = addLayers(net,tempNet);

tempNet = multiplicationLayer(2,"Name","x_model_22_cv2_act_1");
net = addLayers(net,tempNet);

tempNet = convolution2dLayer([3 3],64,"Name","x_model_23_cv2_2__9","Padding",[1 1 1 1],"Bias",params.x_model_23_cv2_2__9.Bias,"Weights",params.x_model_23_cv2_2__9.Weights);
net = addLayers(net,tempNet);

tempNet = groupedConvolution2dLayer([3 3],1,256,"Name","x_model_23_cv3_2__15","Padding",[1 1 1 1],"Bias",params.x_model_23_cv3_2__15.Bias,"Weights",params.x_model_23_cv3_2__15.Weights);
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv2_2__8");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_2__14");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv2_2__7")
    convolution2dLayer([3 3],64,"Name","x_model_23_cv2_2__12","Padding",[1 1 1 1],"Bias",params.x_model_23_cv2_2__12.Bias,"Weights",params.x_model_23_cv2_2__12.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_2__13")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_2__18","Bias",params.x_model_23_cv3_2__18.Bias,"Weights",params.x_model_23_cv3_2__18.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv2_2__11");
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_2__17");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv2_2__10")
    convolution2dLayer([1 1],64,"Name","x_model_23_cv2_2__13","Bias",params.x_model_23_cv2_2__13.Bias,"Weights",params.x_model_23_cv2_2__13.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_2__16")
    groupedConvolution2dLayer([3 3],1,80,"Name","x_model_23_cv3_2__21","Padding",[1 1 1 1],"Bias",params.x_model_23_cv3_2__21.Bias,"Weights",params.x_model_23_cv3_2__21.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_2__20");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_2__19")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_2__24","Bias",params.x_model_23_cv3_2__24.Bias,"Weights",params.x_model_23_cv3_2__24.Weights)];
net = addLayers(net,tempNet);

tempNet = sigmoidLayer("Name","x_model_23_cv3_2__23");
net = addLayers(net,tempNet);

tempNet = [
    multiplicationLayer(2,"Name","x_model_23_cv3_2__22")
    convolution2dLayer([1 1],80,"Name","x_model_23_cv3_2__25","Bias",params.x_model_23_cv3_2__25.Bias,"Weights",params.x_model_23_cv3_2__25.Weights)];
net = addLayers(net,tempNet);

tempNet = concatenationLayer(3,2,"Name","x_model_23_Concat_2");
net = addLayers(net,tempNet);

tempNet = helperBestReshapeToTransposeLayer1060("Reshape_To_TransposeLayer1060","Unable to generate code for [1×1 ONNXParameters] object",params.Reshape_To_TransposeLayer1060.onnx__Split_562,["in1" "in2" "in3"],["x_model_23_dfl_Trans" "x_model_23_Sigmoid_o" "x_model_23_Sigmoid_oNumDims"]);
net = addLayers(net,tempNet);

tempNet = [
    softmaxLayer("Name","x_model_23_dfl_Sof_1")
    convolution2dLayer([1 1],1,"Name","x_model_23_dfl_con_1","Bias",params.x_model_23_dfl_con_1.Bias,"Weights",params.x_model_23_dfl_con_1.Weights)];
net = addLayers(net,tempNet);

tempNet = [
    helperBestReshapeToConcatLayer1065("Reshape_To_ConcatLayer1065","Unable to generate code for [1×1 ONNXParameters] object",["in1" "in2" "in3"],"output0")
    helperNnetOnnxLayerCustomOutputLayer("output0Output",compose("Layer outputs a labeled dlarray with the dimension order shown in the ONNX model file.\nOutput size is:\n    (1, 84, 8400)"),"UUU",true,"in","out")];
net = addLayers(net,tempNet);

% clean up helper variable
clear tempNet;

Connect Layer Branches
Connect all the branches of the network to create the network graph.
net = connectLayers(net,"x_model_0_conv_Conv","x_model_0_act_Sigm_1");
net = connectLayers(net,"x_model_0_conv_Conv","x_model_0_act_Mul/in1");
net = connectLayers(net,"x_model_0_act_Sigm_1","x_model_0_act_Mul/in2");
net = connectLayers(net,"x_model_1_conv_Conv","x_model_1_act_Sigm_1");
net = connectLayers(net,"x_model_1_conv_Conv","x_model_1_act_Mul/in1");
net = connectLayers(net,"x_model_1_act_Sigm_1","x_model_1_act_Mul/in2");
net = connectLayers(net,"x_model_2_cv1_conv_1","x_model_2_cv1_act__2");
net = connectLayers(net,"x_model_2_cv1_conv_1","x_model_2_cv1_act__1/in1");
net = connectLayers(net,"x_model_2_cv1_act__2","x_model_2_cv1_act__1/in2");
net = connectLayers(net,"SplitLayer1004/x_model_2_Split_ou_1","x_model_2_m_0_cv1__4");
net = connectLayers(net,"SplitLayer1004/x_model_2_Split_ou_1","x_model_2_m_0_Add/in1");
net = connectLayers(net,"SplitLayer1004/x_model_2_Split_outp","x_model_2_Concat/in1");
net = connectLayers(net,"SplitLayer1004/x_model_2_Split_ou_1","x_model_2_Concat/in2");
net = connectLayers(net,"x_model_2_m_0_cv1__4","x_model_2_m_0_cv1__3");
net = connectLayers(net,"x_model_2_m_0_cv1__4","x_model_2_m_0_cv1__2/in1");
net = connectLayers(net,"x_model_2_m_0_cv1__3","x_model_2_m_0_cv1__2/in2");
net = connectLayers(net,"x_model_2_m_0_cv2__4","x_model_2_m_0_cv2__3");
net = connectLayers(net,"x_model_2_m_0_cv2__4","x_model_2_m_0_cv2__2/in1");
net = connectLayers(net,"x_model_2_m_0_cv2__3","x_model_2_m_0_cv2__2/in2");
net = connectLayers(net,"x_model_2_m_0_cv2__2","x_model_2_m_0_Add/in2");
net = connectLayers(net,"x_model_2_m_0_Add","x_model_2_Concat/in3");
net = connectLayers(net,"x_model_2_cv2_conv_1","x_model_2_cv2_act__2");
net = connectLayers(net,"x_model_2_cv2_conv_1","x_model_2_cv2_act__1/in1");
net = connectLayers(net,"x_model_2_cv2_act__2","x_model_2_cv2_act__1/in2");
net = connectLayers(net,"x_model_3_conv_Conv","x_model_3_act_Sigm_1");
net = connectLayers(net,"x_model_3_conv_Conv","x_model_3_act_Mul/in1");
net = connectLayers(net,"x_model_3_act_Sigm_1","x_model_3_act_Mul/in2");
net = connectLayers(net,"x_model_4_cv1_conv_1","x_model_4_cv1_act__2");
net = connectLayers(net,"x_model_4_cv1_conv_1","x_model_4_cv1_act__1/in1");
net = connectLayers(net,"x_model_4_cv1_act__2","x_model_4_cv1_act__1/in2");
net = connectLayers(net,"SplitLayer1009/x_model_4_Split_ou_1","x_model_4_m_0_cv1__4");
net = connectLayers(net,"SplitLayer1009/x_model_4_Split_ou_1","x_model_4_m_0_Add/in1");
net = connectLayers(net,"SplitLayer1009/x_model_4_Split_outp","x_model_4_Concat/in1");
net = connectLayers(net,"SplitLayer1009/x_model_4_Split_ou_1","x_model_4_Concat/in2");
net = connectLayers(net,"x_model_4_m_0_cv1__4","x_model_4_m_0_cv1__3");
net = connectLayers(net,"x_model_4_m_0_cv1__4","x_model_4_m_0_cv1__2/in1");
net = connectLayers(net,"x_model_4_m_0_cv1__3","x_model_4_m_0_cv1__2/in2");
net = connectLayers(net,"x_model_4_m_0_cv2__4","x_model_4_m_0_cv2__3");
net = connectLayers(net,"x_model_4_m_0_cv2__4","x_model_4_m_0_cv2__2/in1");
net = connectLayers(net,"x_model_4_m_0_cv2__3","x_model_4_m_0_cv2__2/in2");
net = connectLayers(net,"x_model_4_m_0_cv2__2","x_model_4_m_0_Add/in2");
net = connectLayers(net,"x_model_4_m_0_Add","x_model_4_Concat/in3");
net = connectLayers(net,"x_model_4_cv2_conv_1","x_model_4_cv2_act__2");
net = connectLayers(net,"x_model_4_cv2_conv_1","x_model_4_cv2_act__1/in1");
net = connectLayers(net,"x_model_4_cv2_act__2","x_model_4_cv2_act__1/in2");
net = connectLayers(net,"x_model_4_cv2_act__1","x_model_5_conv_Conv");
net = connectLayers(net,"x_model_4_cv2_act__1","x_model_15_Concat/in1");
net = connectLayers(net,"x_model_5_conv_Conv","x_model_5_act_Sigm_1");
net = connectLayers(net,"x_model_5_conv_Conv","x_model_5_act_Mul/in1");
net = connectLayers(net,"x_model_5_act_Sigm_1","x_model_5_act_Mul/in2");
net = connectLayers(net,"x_model_6_cv1_conv_1","x_model_6_cv1_act__2");
net = connectLayers(net,"x_model_6_cv1_conv_1","x_model_6_cv1_act__1/in1");
net = connectLayers(net,"x_model_6_cv1_act__2","x_model_6_cv1_act__1/in2");
net = connectLayers(net,"SplitLayer1014/x_model_6_Split_ou_1","x_model_6_m_0_cv1__4");
net = connectLayers(net,"SplitLayer1014/x_model_6_Split_ou_1","x_model_6_m_0_cv2__4");
net = connectLayers(net,"SplitLayer1014/x_model_6_Split_outp","x_model_6_Concat/in1");
net = connectLayers(net,"SplitLayer1014/x_model_6_Split_ou_1","x_model_6_Concat/in2");
net = connectLayers(net,"x_model_6_m_0_cv1__4","x_model_6_m_0_cv1__3");
net = connectLayers(net,"x_model_6_m_0_cv1__4","x_model_6_m_0_cv1__2/in1");
net = connectLayers(net,"x_model_6_m_0_cv2__4","x_model_6_m_0_cv2__3");
net = connectLayers(net,"x_model_6_m_0_cv2__4","x_model_6_m_0_cv2__2/in1");
net = connectLayers(net,"x_model_6_m_0_cv1__3","x_model_6_m_0_cv1__2/in2");
net = connectLayers(net,"x_model_6_m_0_cv2__3","x_model_6_m_0_cv2__2/in2");
net = connectLayers(net,"x_model_6_m_0_cv1__2","x_model_6_m_0_m_m_10");
net = connectLayers(net,"x_model_6_m_0_cv1__2","x_model_6_m_0_m_m_7/in1");
net = connectLayers(net,"x_model_6_m_0_cv2__2","x_model_6_m_0_Conc_1/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_10","x_model_6_m_0_m_m_9");
net = connectLayers(net,"x_model_6_m_0_m_m_10","x_model_6_m_0_m_m_8/in1");
net = connectLayers(net,"x_model_6_m_0_m_m_9","x_model_6_m_0_m_m_8/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_13","x_model_6_m_0_m_m_12");
net = connectLayers(net,"x_model_6_m_0_m_m_13","x_model_6_m_0_m_m_11/in1");
net = connectLayers(net,"x_model_6_m_0_m_m_12","x_model_6_m_0_m_m_11/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_11","x_model_6_m_0_m_m_7/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_7","x_model_6_m_0_m_m_23");
net = connectLayers(net,"x_model_6_m_0_m_m_7","x_model_6_m_0_m_m_20/in1");
net = connectLayers(net,"x_model_6_m_0_m_m_23","x_model_6_m_0_m_m_22");
net = connectLayers(net,"x_model_6_m_0_m_m_23","x_model_6_m_0_m_m_21/in1");
net = connectLayers(net,"x_model_6_m_0_m_m_22","x_model_6_m_0_m_m_21/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_26","x_model_6_m_0_m_m_25");
net = connectLayers(net,"x_model_6_m_0_m_m_26","x_model_6_m_0_m_m_24/in1");
net = connectLayers(net,"x_model_6_m_0_m_m_25","x_model_6_m_0_m_m_24/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_24","x_model_6_m_0_m_m_20/in2");
net = connectLayers(net,"x_model_6_m_0_m_m_20","x_model_6_m_0_Conc_1/in1");
net = connectLayers(net,"x_model_6_m_0_cv3__4","x_model_6_m_0_cv3__3");
net = connectLayers(net,"x_model_6_m_0_cv3__4","x_model_6_m_0_cv3__2/in1");
net = connectLayers(net,"x_model_6_m_0_cv3__3","x_model_6_m_0_cv3__2/in2");
net = connectLayers(net,"x_model_6_m_0_cv3__2","x_model_6_Concat/in3");
net = connectLayers(net,"x_model_6_cv2_conv_1","x_model_6_cv2_act__2");
net = connectLayers(net,"x_model_6_cv2_conv_1","x_model_6_cv2_act__1/in1");
net = connectLayers(net,"x_model_6_cv2_act__2","x_model_6_cv2_act__1/in2");
net = connectLayers(net,"x_model_6_cv2_act__1","x_model_7_conv_Conv");
net = connectLayers(net,"x_model_6_cv2_act__1","x_model_12_Concat/in1");
net = connectLayers(net,"x_model_7_conv_Conv","x_model_7_act_Sigm_1");
net = connectLayers(net,"x_model_7_conv_Conv","x_model_7_act_Mul/in1");
net = connectLayers(net,"x_model_7_act_Sigm_1","x_model_7_act_Mul/in2");
net = connectLayers(net,"x_model_8_cv1_conv_1","x_model_8_cv1_act__2");
net = connectLayers(net,"x_model_8_cv1_conv_1","x_model_8_cv1_act__1/in1");
net = connectLayers(net,"x_model_8_cv1_act__2","x_model_8_cv1_act__1/in2");
net = connectLayers(net,"SplitLayer1019/x_model_8_Split_ou_1","x_model_8_m_0_cv1__4");
net = connectLayers(net,"SplitLayer1019/x_model_8_Split_ou_1","x_model_8_m_0_cv2__4");
net = connectLayers(net,"SplitLayer1019/x_model_8_Split_outp","x_model_8_Concat/in1");
net = connectLayers(net,"SplitLayer1019/x_model_8_Split_ou_1","x_model_8_Concat/in2");
net = connectLayers(net,"x_model_8_m_0_cv1__4","x_model_8_m_0_cv1__3");
net = connectLayers(net,"x_model_8_m_0_cv1__4","x_model_8_m_0_cv1__2/in1");
net = connectLayers(net,"x_model_8_m_0_cv2__4","x_model_8_m_0_cv2__3");
net = connectLayers(net,"x_model_8_m_0_cv2__4","x_model_8_m_0_cv2__2/in1");
net = connectLayers(net,"x_model_8_m_0_cv1__3","x_model_8_m_0_cv1__2/in2");
net = connectLayers(net,"x_model_8_m_0_cv2__3","x_model_8_m_0_cv2__2/in2");
net = connectLayers(net,"x_model_8_m_0_cv1__2","x_model_8_m_0_m_m_10");
net = connectLayers(net,"x_model_8_m_0_cv1__2","x_model_8_m_0_m_m_7/in1");
net = connectLayers(net,"x_model_8_m_0_cv2__2","x_model_8_m_0_Conc_1/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_10","x_model_8_m_0_m_m_9");
net = connectLayers(net,"x_model_8_m_0_m_m_10","x_model_8_m_0_m_m_8/in1");
net = connectLayers(net,"x_model_8_m_0_m_m_9","x_model_8_m_0_m_m_8/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_13","x_model_8_m_0_m_m_12");
net = connectLayers(net,"x_model_8_m_0_m_m_13","x_model_8_m_0_m_m_11/in1");
net = connectLayers(net,"x_model_8_m_0_m_m_12","x_model_8_m_0_m_m_11/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_11","x_model_8_m_0_m_m_7/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_7","x_model_8_m_0_m_m_23");
net = connectLayers(net,"x_model_8_m_0_m_m_7","x_model_8_m_0_m_m_20/in1");
net = connectLayers(net,"x_model_8_m_0_m_m_23","x_model_8_m_0_m_m_22");
net = connectLayers(net,"x_model_8_m_0_m_m_23","x_model_8_m_0_m_m_21/in1");
net = connectLayers(net,"x_model_8_m_0_m_m_22","x_model_8_m_0_m_m_21/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_26","x_model_8_m_0_m_m_25");
net = connectLayers(net,"x_model_8_m_0_m_m_26","x_model_8_m_0_m_m_24/in1");
net = connectLayers(net,"x_model_8_m_0_m_m_25","x_model_8_m_0_m_m_24/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_24","x_model_8_m_0_m_m_20/in2");
net = connectLayers(net,"x_model_8_m_0_m_m_20","x_model_8_m_0_Conc_1/in1");
net = connectLayers(net,"x_model_8_m_0_cv3__4","x_model_8_m_0_cv3__3");
net = connectLayers(net,"x_model_8_m_0_cv3__4","x_model_8_m_0_cv3__2/in1");
net = connectLayers(net,"x_model_8_m_0_cv3__3","x_model_8_m_0_cv3__2/in2");
net = connectLayers(net,"x_model_8_m_0_cv3__2","x_model_8_Concat/in3");
net = connectLayers(net,"x_model_8_cv2_conv_1","x_model_8_cv2_act__2");
net = connectLayers(net,"x_model_8_cv2_conv_1","x_model_8_cv2_act__1/in1");
net = connectLayers(net,"x_model_8_cv2_act__2","x_model_8_cv2_act__1/in2");
net = connectLayers(net,"x_model_9_cv1_conv_1","x_model_9_cv1_act__2");
net = connectLayers(net,"x_model_9_cv1_conv_1","x_model_9_cv1_act__1/in1");
net = connectLayers(net,"x_model_9_cv1_act__2","x_model_9_cv1_act__1/in2");
net = connectLayers(net,"x_model_9_cv1_act__1","x_model_9_m_MaxPool");
net = connectLayers(net,"x_model_9_cv1_act__1","x_model_9_Concat/in1");
net = connectLayers(net,"x_model_9_m_MaxPool","x_model_9_m_1_MaxP_1");
net = connectLayers(net,"x_model_9_m_MaxPool","x_model_9_Concat/in2");
net = connectLayers(net,"x_model_9_m_1_MaxP_1","x_model_9_m_2_MaxP_1");
net = connectLayers(net,"x_model_9_m_1_MaxP_1","x_model_9_Concat/in3");
net = connectLayers(net,"x_model_9_m_2_MaxP_1","x_model_9_Concat/in4");
net = connectLayers(net,"x_model_9_cv2_conv_1","x_model_9_cv2_act__2");
net = connectLayers(net,"x_model_9_cv2_conv_1","x_model_9_cv2_act__1/in1");
net = connectLayers(net,"x_model_9_cv2_act__2","x_model_9_cv2_act__1/in2");
net = connectLayers(net,"x_model_10_cv1_con_1","x_model_10_cv1_act_2");
net = connectLayers(net,"x_model_10_cv1_con_1","x_model_10_cv1_act_1/in1");
net = connectLayers(net,"x_model_10_cv1_act_2","x_model_10_cv1_act_1/in2");
net = connectLayers(net,"SplitLayer1024/x_model_10_Split_o_1","x_model_10_m_m_0__32");
net = connectLayers(net,"SplitLayer1024/x_model_10_Split_o_1","x_model_10_m_m_0_A_2/in1");
net = connectLayers(net,"SplitLayer1024/x_model_10_Split_out","x_model_10_Concat/in1");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__8","x_model_10_m_m_0__30");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__11","Transpose_To_AddLayer1081/in1");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__12","Transpose_To_AddLayer1081/in2");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__13","Transpose_To_AddLayer1081/in3");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__11NumDims","Transpose_To_AddLayer1081/in5");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__12NumDims","Transpose_To_AddLayer1081/in6");
net = connectLayers(net,"Reshape_To_ReshapeLayer1072/x_model_10_m_m_0__13NumDims","Transpose_To_AddLayer1081/in7");
net = connectLayers(net,"x_model_10_m_m_0__30","Transpose_To_AddLayer1081/in4");
net = connectLayers(net,"x_model_10_m_m_0__31","x_model_10_m_m_0_A_2/in2");
net = connectLayers(net,"x_model_10_m_m_0_A_2","x_model_10_m_m_0_f_6");
net = connectLayers(net,"x_model_10_m_m_0_A_2","x_model_10_m_m_0_A_3/in1");
net = connectLayers(net,"x_model_10_m_m_0_f_6","x_model_10_m_m_0_f_5");
net = connectLayers(net,"x_model_10_m_m_0_f_6","x_model_10_m_m_0_f_4/in1");
net = connectLayers(net,"x_model_10_m_m_0_f_5","x_model_10_m_m_0_f_4/in2");
net = connectLayers(net,"x_model_10_m_m_0_f_7","x_model_10_m_m_0_A_3/in2");
net = connectLayers(net,"x_model_10_m_m_0_A_3","x_model_10_Concat/in2");
net = connectLayers(net,"x_model_10_cv2_con_1","x_model_10_cv2_act_2");
net = connectLayers(net,"x_model_10_cv2_con_1","x_model_10_cv2_act_1/in1");
net = connectLayers(net,"x_model_10_cv2_act_2","x_model_10_cv2_act_1/in2");
net = connectLayers(net,"x_model_10_cv2_act_1","resize-output-size");
net = connectLayers(net,"x_model_10_cv2_act_1","x_model_21_Concat/in2");
net = connectLayers(net,"resize-output-size","x_model_12_Concat/in2");
net = connectLayers(net,"x_model_13_cv1_con_1","x_model_13_cv1_act_2");
net = connectLayers(net,"x_model_13_cv1_con_1","x_model_13_cv1_act_1/in1");
net = connectLayers(net,"x_model_13_cv1_act_2","x_model_13_cv1_act_1/in2");
net = connectLayers(net,"SplitLayer1033/x_model_13_Split_o_1","x_model_13_m_0_cv1_4");
net = connectLayers(net,"SplitLayer1033/x_model_13_Split_o_1","x_model_13_m_0_Add/in1");
net = connectLayers(net,"SplitLayer1033/x_model_13_Split_out","x_model_13_Concat/in1");
net = connectLayers(net,"SplitLayer1033/x_model_13_Split_o_1","x_model_13_Concat/in2");
net = connectLayers(net,"x_model_13_m_0_cv1_4","x_model_13_m_0_cv1_3");
net = connectLayers(net,"x_model_13_m_0_cv1_4","x_model_13_m_0_cv1_2/in1");
net = connectLayers(net,"x_model_13_m_0_cv1_3","x_model_13_m_0_cv1_2/in2");
net = connectLayers(net,"x_model_13_m_0_cv2_4","x_model_13_m_0_cv2_3");
net = connectLayers(net,"x_model_13_m_0_cv2_4","x_model_13_m_0_cv2_2/in1");
net = connectLayers(net,"x_model_13_m_0_cv2_3","x_model_13_m_0_cv2_2/in2");
net = connectLayers(net,"x_model_13_m_0_cv2_2","x_model_13_m_0_Add/in2");
net = connectLayers(net,"x_model_13_m_0_Add","x_model_13_Concat/in3");
net = connectLayers(net,"x_model_13_cv2_con_1","x_model_13_cv2_act_2");
net = connectLayers(net,"x_model_13_cv2_con_1","x_model_13_cv2_act_1/in1");
net = connectLayers(net,"x_model_13_cv2_act_2","x_model_13_cv2_act_1/in2");
net = connectLayers(net,"x_model_13_cv2_act_1","resize-output-size_1");
net = connectLayers(net,"x_model_13_cv2_act_1","x_model_18_Concat/in2");
net = connectLayers(net,"resize-output-size_1","x_model_15_Concat/in2");
net = connectLayers(net,"x_model_16_cv1_con_1","x_model_16_cv1_act_2");
net = connectLayers(net,"x_model_16_cv1_con_1","x_model_16_cv1_act_1/in1");
net = connectLayers(net,"x_model_16_cv1_act_2","x_model_16_cv1_act_1/in2");
net = connectLayers(net,"SplitLayer1042/x_model_16_Split_o_1","x_model_16_m_0_cv1_4");
net = connectLayers(net,"SplitLayer1042/x_model_16_Split_o_1","x_model_16_m_0_Add/in1");
net = connectLayers(net,"SplitLayer1042/x_model_16_Split_out","x_model_16_Concat/in1");
net = connectLayers(net,"SplitLayer1042/x_model_16_Split_o_1","x_model_16_Concat/in2");
net = connectLayers(net,"x_model_16_m_0_cv1_4","x_model_16_m_0_cv1_3");
net = connectLayers(net,"x_model_16_m_0_cv1_4","x_model_16_m_0_cv1_2/in1");
net = connectLayers(net,"x_model_16_m_0_cv1_3","x_model_16_m_0_cv1_2/in2");
net = connectLayers(net,"x_model_16_m_0_cv2_4","x_model_16_m_0_cv2_3");
net = connectLayers(net,"x_model_16_m_0_cv2_4","x_model_16_m_0_cv2_2/in1");
net = connectLayers(net,"x_model_16_m_0_cv2_3","x_model_16_m_0_cv2_2/in2");
net = connectLayers(net,"x_model_16_m_0_cv2_2","x_model_16_m_0_Add/in2");
net = connectLayers(net,"x_model_16_m_0_Add","x_model_16_Concat/in3");
net = connectLayers(net,"x_model_16_cv2_con_1","x_model_16_cv2_act_2");
net = connectLayers(net,"x_model_16_cv2_con_1","x_model_16_cv2_act_1/in1");
net = connectLayers(net,"x_model_16_cv2_act_2","x_model_16_cv2_act_1/in2");
net = connectLayers(net,"x_model_16_cv2_act_1","x_model_17_conv_Co_1");
net = connectLayers(net,"x_model_16_cv2_act_1","x_model_23_cv2_0__9");
net = connectLayers(net,"x_model_16_cv2_act_1","x_model_23_cv3_0__15");
net = connectLayers(net,"x_model_17_conv_Co_1","x_model_17_act_Sig_1");
net = connectLayers(net,"x_model_17_conv_Co_1","x_model_17_act_Mul/in1");
net = connectLayers(net,"x_model_23_cv2_0__9","x_model_23_cv2_0__8");
net = connectLayers(net,"x_model_23_cv2_0__9","x_model_23_cv2_0__7/in1");
net = connectLayers(net,"x_model_23_cv3_0__15","x_model_23_cv3_0__14");
net = connectLayers(net,"x_model_23_cv3_0__15","x_model_23_cv3_0__13/in1");
net = connectLayers(net,"x_model_17_act_Sig_1","x_model_17_act_Mul/in2");
net = connectLayers(net,"x_model_23_cv2_0__8","x_model_23_cv2_0__7/in2");
net = connectLayers(net,"x_model_23_cv3_0__14","x_model_23_cv3_0__13/in2");
net = connectLayers(net,"x_model_17_act_Mul","x_model_18_Concat/in1");
net = connectLayers(net,"x_model_23_cv2_0__12","x_model_23_cv2_0__11");
net = connectLayers(net,"x_model_23_cv2_0__12","x_model_23_cv2_0__10/in1");
net = connectLayers(net,"x_model_23_cv3_0__18","x_model_23_cv3_0__17");
net = connectLayers(net,"x_model_23_cv3_0__18","x_model_23_cv3_0__16/in1");
net = connectLayers(net,"x_model_19_cv1_con_1","x_model_19_cv1_act_2");
net = connectLayers(net,"x_model_19_cv1_con_1","x_model_19_cv1_act_1/in1");
net = connectLayers(net,"x_model_23_cv2_0__11","x_model_23_cv2_0__10/in2");
net = connectLayers(net,"x_model_23_cv3_0__17","x_model_23_cv3_0__16/in2");
net = connectLayers(net,"x_model_19_cv1_act_2","x_model_19_cv1_act_1/in2");
net = connectLayers(net,"x_model_23_cv2_0__13","x_model_23_Concat/in1");
net = connectLayers(net,"x_model_23_cv3_0__21","x_model_23_cv3_0__20");
net = connectLayers(net,"x_model_23_cv3_0__21","x_model_23_cv3_0__19/in1");
net = connectLayers(net,"SplitLayer1047/x_model_19_Split_o_1","x_model_19_m_0_cv1_4");
net = connectLayers(net,"SplitLayer1047/x_model_19_Split_o_1","x_model_19_m_0_Add/in1");
net = connectLayers(net,"SplitLayer1047/x_model_19_Split_out","x_model_19_Concat/in1");
net = connectLayers(net,"SplitLayer1047/x_model_19_Split_o_1","x_model_19_Concat/in2");
net = connectLayers(net,"x_model_23_cv3_0__20","x_model_23_cv3_0__19/in2");
net = connectLayers(net,"x_model_19_m_0_cv1_4","x_model_19_m_0_cv1_3");
net = connectLayers(net,"x_model_19_m_0_cv1_4","x_model_19_m_0_cv1_2/in1");
net = connectLayers(net,"x_model_19_m_0_cv1_3","x_model_19_m_0_cv1_2/in2");
net = connectLayers(net,"x_model_23_cv3_0__24","x_model_23_cv3_0__23");
net = connectLayers(net,"x_model_23_cv3_0__24","x_model_23_cv3_0__22/in1");
net = connectLayers(net,"x_model_23_cv3_0__23","x_model_23_cv3_0__22/in2");
net = connectLayers(net,"x_model_19_m_0_cv2_4","x_model_19_m_0_cv2_3");
net = connectLayers(net,"x_model_19_m_0_cv2_4","x_model_19_m_0_cv2_2/in1");
net = connectLayers(net,"x_model_19_m_0_cv2_3","x_model_19_m_0_cv2_2/in2");
net = connectLayers(net,"x_model_23_cv3_0__25","x_model_23_Concat/in2");
net = connectLayers(net,"x_model_19_m_0_cv2_2","x_model_19_m_0_Add/in2");
net = connectLayers(net,"x_model_23_Concat","Reshape_To_TransposeLayer1060/in1");
net = connectLayers(net,"x_model_19_m_0_Add","x_model_19_Concat/in3");
net = connectLayers(net,"x_model_19_cv2_con_1","x_model_19_cv2_act_2");
net = connectLayers(net,"x_model_19_cv2_con_1","x_model_19_cv2_act_1/in1");
net = connectLayers(net,"x_model_19_cv2_act_2","x_model_19_cv2_act_1/in2");
net = connectLayers(net,"x_model_19_cv2_act_1","x_model_20_conv_Co_1");
net = connectLayers(net,"x_model_19_cv2_act_1","x_model_23_cv2_1__9");
net = connectLayers(net,"x_model_19_cv2_act_1","x_model_23_cv3_1__15");
net = connectLayers(net,"x_model_20_conv_Co_1","x_model_20_act_Sig_1");
net = connectLayers(net,"x_model_20_conv_Co_1","x_model_20_act_Mul/in1");
net = connectLayers(net,"x_model_23_cv2_1__9","x_model_23_cv2_1__8");
net = connectLayers(net,"x_model_23_cv2_1__9","x_model_23_cv2_1__7/in1");
net = connectLayers(net,"x_model_23_cv3_1__15","x_model_23_cv3_1__14");
net = connectLayers(net,"x_model_23_cv3_1__15","x_model_23_cv3_1__13/in1");
net = connectLayers(net,"x_model_20_act_Sig_1","x_model_20_act_Mul/in2");
net = connectLayers(net,"x_model_23_cv2_1__8","x_model_23_cv2_1__7/in2");
net = connectLayers(net,"x_model_23_cv3_1__14","x_model_23_cv3_1__13/in2");
net = connectLayers(net,"x_model_20_act_Mul","x_model_21_Concat/in1");
net = connectLayers(net,"x_model_23_cv2_1__12","x_model_23_cv2_1__11");
net = connectLayers(net,"x_model_23_cv2_1__12","x_model_23_cv2_1__10/in1");
net = connectLayers(net,"x_model_23_cv3_1__18","x_model_23_cv3_1__17");
net = connectLayers(net,"x_model_23_cv3_1__18","x_model_23_cv3_1__16/in1");
net = connectLayers(net,"x_model_22_cv1_con_1","x_model_22_cv1_act_2");
net = connectLayers(net,"x_model_22_cv1_con_1","x_model_22_cv1_act_1/in1");
net = connectLayers(net,"x_model_23_cv2_1__11","x_model_23_cv2_1__10/in2");
net = connectLayers(net,"x_model_23_cv3_1__17","x_model_23_cv3_1__16/in2");
net = connectLayers(net,"x_model_22_cv1_act_2","x_model_22_cv1_act_1/in2");
net = connectLayers(net,"x_model_23_cv2_1__13","x_model_23_Concat_1/in1");
net = connectLayers(net,"x_model_23_cv3_1__21","x_model_23_cv3_1__20");
net = connectLayers(net,"x_model_23_cv3_1__21","x_model_23_cv3_1__19/in1");
net = connectLayers(net,"SplitLayer1052/x_model_22_Split_o_1","x_model_22_m_0_cv1_4");
net = connectLayers(net,"SplitLayer1052/x_model_22_Split_o_1","x_model_22_m_0_cv2_4");
net = connectLayers(net,"SplitLayer1052/x_model_22_Split_out","x_model_22_Concat/in1");
net = connectLayers(net,"SplitLayer1052/x_model_22_Split_o_1","x_model_22_Concat/in2");
net = connectLayers(net,"x_model_23_cv3_1__20","x_model_23_cv3_1__19/in2");
net = connectLayers(net,"x_model_22_m_0_cv1_4","x_model_22_m_0_cv1_3");
net = connectLayers(net,"x_model_22_m_0_cv1_4","x_model_22_m_0_cv1_2/in1");
net = connectLayers(net,"x_model_22_m_0_cv2_4","x_model_22_m_0_cv2_3");
net = connectLayers(net,"x_model_22_m_0_cv2_4","x_model_22_m_0_cv2_2/in1");
net = connectLayers(net,"x_model_22_m_0_cv1_3","x_model_22_m_0_cv1_2/in2");
net = connectLayers(net,"x_model_22_m_0_cv2_3","x_model_22_m_0_cv2_2/in2");
net = connectLayers(net,"x_model_23_cv3_1__24","x_model_23_cv3_1__23");
net = connectLayers(net,"x_model_23_cv3_1__24","x_model_23_cv3_1__22/in1");
net = connectLayers(net,"x_model_22_m_0_cv1_2","x_model_22_m_0_m__10");
net = connectLayers(net,"x_model_22_m_0_cv1_2","x_model_22_m_0_m__7/in1");
net = connectLayers(net,"x_model_22_m_0_cv2_2","x_model_22_m_0_Con_1/in2");
net = connectLayers(net,"x_model_23_cv3_1__23","x_model_23_cv3_1__22/in2");
net = connectLayers(net,"x_model_22_m_0_m__10","x_model_22_m_0_m__9");
net = connectLayers(net,"x_model_22_m_0_m__10","x_model_22_m_0_m__8/in1");
net = connectLayers(net,"x_model_22_m_0_m__9","x_model_22_m_0_m__8/in2");
net = connectLayers(net,"x_model_23_cv3_1__25","x_model_23_Concat_1/in2");
net = connectLayers(net,"x_model_23_Concat_1","Reshape_To_TransposeLayer1060/in2");
net = connectLayers(net,"x_model_22_m_0_m__13","x_model_22_m_0_m__12");
net = connectLayers(net,"x_model_22_m_0_m__13","x_model_22_m_0_m__11/in1");
net = connectLayers(net,"x_model_22_m_0_m__12","x_model_22_m_0_m__11/in2");
net = connectLayers(net,"x_model_22_m_0_m__11","x_model_22_m_0_m__7/in2");
net = connectLayers(net,"x_model_22_m_0_m__7","x_model_22_m_0_m__23");
net = connectLayers(net,"x_model_22_m_0_m__7","x_model_22_m_0_m__20/in1");
net = connectLayers(net,"x_model_22_m_0_m__23","x_model_22_m_0_m__22");
net = connectLayers(net,"x_model_22_m_0_m__23","x_model_22_m_0_m__21/in1");
net = connectLayers(net,"x_model_22_m_0_m__22","x_model_22_m_0_m__21/in2");
net = connectLayers(net,"x_model_22_m_0_m__26","x_model_22_m_0_m__25");
net = connectLayers(net,"x_model_22_m_0_m__26","x_model_22_m_0_m__24/in1");
net = connectLayers(net,"x_model_22_m_0_m__25","x_model_22_m_0_m__24/in2");
net = connectLayers(net,"x_model_22_m_0_m__24","x_model_22_m_0_m__20/in2");
net = connectLayers(net,"x_model_22_m_0_m__20","x_model_22_m_0_Con_1/in1");
net = connectLayers(net,"x_model_22_m_0_cv3_4","x_model_22_m_0_cv3_3");
net = connectLayers(net,"x_model_22_m_0_cv3_4","x_model_22_m_0_cv3_2/in1");
net = connectLayers(net,"x_model_22_m_0_cv3_3","x_model_22_m_0_cv3_2/in2");
net = connectLayers(net,"x_model_22_m_0_cv3_2","x_model_22_Concat/in3");
net = connectLayers(net,"x_model_22_cv2_con_1","x_model_22_cv2_act_2");
net = connectLayers(net,"x_model_22_cv2_con_1","x_model_22_cv2_act_1/in1");
net = connectLayers(net,"x_model_22_cv2_act_2","x_model_22_cv2_act_1/in2");
net = connectLayers(net,"x_model_22_cv2_act_1","x_model_23_cv2_2__9");
net = connectLayers(net,"x_model_22_cv2_act_1","x_model_23_cv3_2__15");
net = connectLayers(net,"x_model_23_cv2_2__9","x_model_23_cv2_2__8");
net = connectLayers(net,"x_model_23_cv2_2__9","x_model_23_cv2_2__7/in1");
net = connectLayers(net,"x_model_23_cv3_2__15","x_model_23_cv3_2__14");
net = connectLayers(net,"x_model_23_cv3_2__15","x_model_23_cv3_2__13/in1");
net = connectLayers(net,"x_model_23_cv2_2__8","x_model_23_cv2_2__7/in2");
net = connectLayers(net,"x_model_23_cv3_2__14","x_model_23_cv3_2__13/in2");
net = connectLayers(net,"x_model_23_cv2_2__12","x_model_23_cv2_2__11");
net = connectLayers(net,"x_model_23_cv2_2__12","x_model_23_cv2_2__10/in1");
net = connectLayers(net,"x_model_23_cv3_2__18","x_model_23_cv3_2__17");
net = connectLayers(net,"x_model_23_cv3_2__18","x_model_23_cv3_2__16/in1");
net = connectLayers(net,"x_model_23_cv2_2__11","x_model_23_cv2_2__10/in2");
net = connectLayers(net,"x_model_23_cv3_2__17","x_model_23_cv3_2__16/in2");
net = connectLayers(net,"x_model_23_cv2_2__13","x_model_23_Concat_2/in1");
net = connectLayers(net,"x_model_23_cv3_2__21","x_model_23_cv3_2__20");
net = connectLayers(net,"x_model_23_cv3_2__21","x_model_23_cv3_2__19/in1");
net = connectLayers(net,"x_model_23_cv3_2__20","x_model_23_cv3_2__19/in2");
net = connectLayers(net,"x_model_23_cv3_2__24","x_model_23_cv3_2__23");
net = connectLayers(net,"x_model_23_cv3_2__24","x_model_23_cv3_2__22/in1");
net = connectLayers(net,"x_model_23_cv3_2__23","x_model_23_cv3_2__22/in2");
net = connectLayers(net,"x_model_23_cv3_2__25","x_model_23_Concat_2/in2");
net = connectLayers(net,"x_model_23_Concat_2","Reshape_To_TransposeLayer1060/in3");
net = connectLayers(net,"Reshape_To_TransposeLayer1060/x_model_23_dfl_Trans","x_model_23_dfl_Sof_1");
net = connectLayers(net,"Reshape_To_TransposeLayer1060/x_model_23_Sigmoid_o","Reshape_To_ConcatLayer1065/in2");
net = connectLayers(net,"Reshape_To_TransposeLayer1060/x_model_23_Sigmoid_oNumDims","Reshape_To_ConcatLayer1065/in3");
net = connectLayers(net,"x_model_23_dfl_con_1","Reshape_To_ConcatLayer1065/in1");
net = initialize(net);

Plot Layers
%plot(net);
% Reshape and Concat Layers
function layer = helperBestReshapeToConcatLayer1065(name, ~, ~, ~)
    layer = ReshapeConcatLayer(char(name));
end

function layer = helperBestReshapeToReshapeLayer1072(name, ~, ~, ~, ~)
    layer = ReshapeReshapeLayer(char(name));
end

function layer = helperBestReshapeToTransposeLayer1060(name, ~, ~, ~, ~)
    layer = ReshapeTransposeLayer(char(name));
end

% Split Layers
function layer = helperBestSplitLayer1004(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_2_Split_ou_1', 'x_model_2_Split_outp'});
end

function layer = helperBestSplitLayer1009(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_4_Split_ou_1', 'x_model_4_Split_outp'});
end

function layer = helperBestSplitLayer1014(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_6_Split_ou_1', 'x_model_6_Split_outp'});
end

function layer = helperBestSplitLayer1019(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_8_Split_ou_1', 'x_model_8_Split_outp'});
end

function layer = helperBestSplitLayer1024(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_10_Split_o_1', 'x_model_10_Split_out'});
end

function layer = helperBestSplitLayer1033(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_13_Split_o_1', 'x_model_13_Split_out'});
end

function layer = helperBestSplitLayer1042(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_16_Split_o_1', 'x_model_16_Split_out'});
end

function layer = helperBestSplitLayer1047(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_19_Split_o_1', 'x_model_19_Split_out'});
end

function layer = helperBestSplitLayer1052(name, ~, ~, ~, ~)
    layer = SplitLayer(char(name), {'x_model_22_Split_o_1', 'x_model_22_Split_out'});
end

% Transpose and Addition Layer
function layer = helperBestTransposeToAddLayer1081(name, ~, ~, ~)
    layer = TransposeToAddLayer(char(name));
end

% Custom Output Layer
function layer = helperNnetOnnxLayerCustomOutputLayer(name, outputInformation, dataFormat, isInputForwardONNX, ~, ~)
    layer = YOLOCustomOutputLayer(name, outputInformation, dataFormat, isInputForwardONNX);
end


save('YOLOv11_model.mat', 'net');
